(function () {
    'use strict';

    function clean(oldData) {
        let newData = oldData.results;
        if (oldData.results) {
            // console.log(oldData.results.coverimages[0])

            return newData.map((data) => {
                return {
                    id: data.id,
                    title: data.titles[0],
                    thumbnail: data.coverimages[1],
                    authors: data.authors,
                    summaries: data.summaries || '',
                    isbn: data.isbn
                }
            });
        } else {
            let data = oldData.record;
            return {
                id: data.id,
                title: data.titles[0],
                thumbnail: data.coverimages[1],
                authors: data.authors,
                summaries: data.summaries || '',
                isbn: data.isbn
            }
        }
    }

    // create html element
    function createElement (jsonData, selector) {
        for (const item of jsonData) {
            const className = `.${selector}`;
            const section = document.querySelector(className);
            section.insertAdjacentHTML('beforeend',
                `<article>
                <img src="${item.thumbnail}">
                <div>
                    <a href="#${item.id}"><h2>${item.title}</h2></a>
                    <p>${item.summaries}</p>
                </div>
            </article>`);
        }
    }

    // create detail html element with classname
    function createDetail (jsonData, selector) {
        const className = `.${selector}`;
        const section = document.querySelector(className);
        
        const element = 
        `<article>
        <h2>${jsonData.title}</h2>
        <img src="${jsonData.thumbnail}">
    </article>`;

        section.insertAdjacentHTML('afterbegin', element);
    }

    //clean up existing child elements
    function clearElement() {
        const section = document.querySelector('section');
        while (section.firstChild) {
            section.removeChild(section.firstChild);
        }
        // https://medium.com/front-end-weekly/remove-all-children-of-the-node-in-javascript-968ad8f120eb
    }

    // render overview page
    function allBooks (data) {
        clearElement();
        createElement(data, 'books');
    }

    function book (data) {
        clearElement();
        createDetail(data, 'books');
    }

    const cors = 'https://cors-anywhere.herokuapp.com/';
    const baseUrl = 'https://zoeken.oba.nl/api/v1/';
    const query = 'bloemen';
    const key = '1e19898c87464e239192c8bfe422f280';
    const secret = '4289fec4e962a33118340c888699438d';
    const detail = 'Default';
    const endpoint = `${cors}${baseUrl}search/?q=${query}&authorization=${key}&detaillevel=${detail}&output=json`;

    const config = {
    	Authorization: `Bearer ${secret}`
    };

    // fetch data function
    async function fetchData(url, config) {
        const response = await fetch(url, config);
        const jsonData = await response.json();
        // console.log(jsonData)
        const cleanData = clean(jsonData);
        return cleanData;
    }

    // Get data for the overview page and render
    async function getAllBooks () {
        const books = await fetchData(endpoint, config);
        // console.log(books)
        allBooks(books);
    }

    // fetch data and find the correct books with id
    async function findBook (id) {
        const booksEndpoint = `${cors}${baseUrl}details/?id=${id}&authorization=${key}&detaillevel=${detail}&p=jeugd&output=json`;
        const books = await fetchData(booksEndpoint, config);
        // const findData = books.find((data) => data.id == id);
        return books;
        // https://medium.com/poka-techblog/simplify-your-javascript-use-map-reduce-and-filter-bd02c593cc2d
    }

    // Get data for the detail page and render
    async function getBook (id) {
        const book$1 = await findBook(id);
        book(book$1);
    }

    // Search for books
    const button = document.querySelector('button');

    function searchInput () {
        var searchValue = document.querySelector('input').value;
        return searchValue;
    }

    async function searchResults () {
        const query = searchInput();
        const searchBooksEndpoint = `${cors}${baseUrl}search/?q=${query}&authorization=${key}&detaillevel=${detail}&output=json`;
        const searchResults = await fetchData(searchBooksEndpoint, config);
        return searchResults;
    }

    async function getSearchResults(){
        const results = await searchResults();
        allBooks(results);
    }

    button.addEventListener('click', getSearchResults);

    const personName = document.getElementById('name');
    const personAge = document.getElementById('age');
    const personClass = document.getElementById('class');
    const teacher = document.getElementById('teacher');
    const dueDate = document.getElementById('due');
    // assignment details
    const titleAssignment = document.getElementById('title');
    const bookTitle = document.getElementById('book-title');
    const bookAuthor = document.getElementById('author');
    const bookPublication = document.getElementById('publication');
    const bookIntro = document.getElementById('intro');
    const bookSummary = document.getElementById('summary');

    let form = document.querySelector('form');

    function inputPerson() {
        const personData = {
            name: personName.value,
            age: personAge.value,
            class: personClass.value,
            teacher: teacher.value,
            due: dueDate.value,
            title: titleAssignment.value,
            bookTitle: bookTitle.value,
            author: bookAuthor.value,
            publication: bookPublication.value,
            intro: bookIntro.value,
            summary: bookSummary.value
        };
        return personData
    }

    function setPerson() {
        localStorage.setItem('person', JSON.stringify(inputPerson()));
    }

    function getPerson() {
        let personData = localStorage.getItem('person');
        let data = JSON.parse(personData);
        return data
    }

    function makeAssignment() {
        setPerson();
        const data = getPerson();

        const main = document.querySelector('main');
        const html = `
    <section class="paper">
    <article class="cover">
        <h1 id="title">${data.title}</h1>
        <h2><span>Docent:</span> ${data.teacher}</h2>
        <h2><span>Inleverdatum:</span>${data.due}</h2>
    </article>
    <article class="intro">
        <p>
            ${data.intro}
        </p>
    </article>
    <article class="book">
        <h2>${data.bookTitle}</h2>
        <h3>${data.author}</h3>
        <h2>Inleiding</h2>
        <p>
            ${data.summary}
        </p>
    </article>

</section>
        
    `;
        main.insertAdjacentHTML('beforeend', html);

    }

    form.addEventListener('submit', function (e) {
        e.preventDefault();
        makeAssignment();

    });

    const routes = () => {
        routie({
            '': function () {
                getAllBooks();
            },
            '/:id': function (id) {
                console.log(id);
                getBook(id);
            },
            'werkstuk' : function(){
                setPerson();
                console.log('hi');
            }
        });
    };

    routes();

}());
