(function () {
    'use strict';

    function clean (oldData) {

        let newData = oldData.results;
        return newData = newData.map((data) => {
            return {
                id : data.id,
                title: data.titles[0],
                thumbnail: data.coverimages[1],
                isbn: data.isbn
            }
        });
    }

    // create html element
    const createElement = (jsonData, selector) => {
        for (const item of jsonData) {
            const className = `.${selector}`;
            const section = document.querySelector(className);
            section.insertAdjacentHTML('beforeend',
                `<article>
                <img src="${item.thumbnail}">
                <a href="#${item.id}"><h2>${item.title}</h2></a>
            </article>`);
        }
    };

    // create detail html element with classname
    const createDetail = (jsonData, selector) => {
        const className = `.${selector}`;
        const section = document.querySelector(className);
        
        const element = 
        `<article>
        <h2>${jsonData.title}</h2>
        <img src="${jsonData.thumbnail}">
    </article>`;

        section.insertAdjacentHTML('afterbegin', element);
    };

    // render overview page
    const allBooks = (data) => {
        createElement(data, 'books');
    };

    const book = (data) => {
        createDetail(data, 'books');
    };

    const cors = 'https://cors-anywhere.herokuapp.com/';
    const endpoint = 'https://zoeken.oba.nl/api/v1/search/?q=';
    const query = 'bloemen';
    const key = '1e19898c87464e239192c8bfe422f280';
    const detail = 'Default';
    const booksEndpoint = `${cors}${endpoint}${query}&authorization=${key}&detaillevel=${detail}&output=json`;

    // fetch data function
    async function fetchData(url, config) {
        const response = await fetch(url);
        const jsonData = await response.json();
        const cleanData = clean(jsonData);
        return cleanData;
    }

    // Get data for the overview page and render
    async function getAllBooks () {
        const books = await fetchData(booksEndpoint);
        allBooks(books);
    }

    // fetch data and find the correct books with id
    async function findBook (id) {
        const books = await fetchData(booksEndpoint);
        const findData = books.find((data) => data.id == id);
        return findData;
        // https://medium.com/poka-techblog/simplify-your-javascript-use-map-reduce-and-filter-bd02c593cc2d
    }

    // Get data for the detail page and render
    async function getBook (id) {
        const book$1 = await findBook(id);
        book(book$1);
    }

    // Search for books
    const button = document.querySelector('button');

    function search () {
        var searchValue = document.querySelector('input').value;
        return searchValue;
    }

    async function searchName () {

        const query = search();
        const newBooksEndpoint = `${cors}${endpoint}${query}&authorization=${key}&detaillevel=${detail}&output=json`;
        // console.log(newBooksEndpoint)

        const searchResults = await fetchData(newBooksEndpoint);
        clearData();
        allBooks(searchResults);
    }

    function clearData() {
        const main = document.querySelector('main');
        const section = document.querySelector('section');
        section.remove();
        const newSection = document.createElement('section');
        newSection.className = 'books';
        main.appendChild(newSection);
    }

    button.addEventListener('click', searchName);

    const routes = () => {
        routie({
            '': function () {
                getAllBooks();
            },
            ':id': function (id) {
                getBook(id);
            }
        });
    };

    routes();

}());
